call plug#begin('~/.vim/plugged')

function! DoRemote(arg)
  UpdateRemotePlugins
endfunction
Plug 'Shougo/deoplete.nvim', { 'do': function('DoRemote') }

Plug '/usr/local/opt/fzf' | Plug 'junegunn/fzf.vim'

Plug 'airblade/vim-gitgutter'
Plug 'ajh17/Spacegray.vim'
Plug 'alfredodeza/pytest.vim'
Plug 'ap/vim-buftabline'
Plug 'bkad/CamelCaseMotion'
Plug 'Blackrush/vim-gocode'
Plug 'danro/rename.vim'
Plug 'editorconfig/editorconfig-vim'
Plug 'elixir-lang/vim-elixir'
Plug 'fisadev/vim-isort'
Plug 'groenewege/vim-less'
Plug 'iandoe/vim-osx-colorpicker'
Plug 'kchmck/vim-coffee-script'
Plug 'mattn/emmet-vim'
Plug 'mhinz/vim-sayonara'
Plug 'michaeljsmith/vim-indent-object'
Plug 'mitsuhiko/vim-jinja'
Plug 'mitsuhiko/vim-python-combined'
Plug 'mitsuhiko/vim-rst'
Plug 'neomake/neomake'
Plug 'rstacruz/vim-opinion'
Plug 'Shougo/vimproc.vim', { 'do': 'make' }
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-dispatch'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-sleuth'
Plug 'tpope/vim-speeddating'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'vim-scripts/matchit.zip'
Plug 'vim-scripts/py_jump.vim'
Plug 'vim-scripts/YankRing.vim'
Plug 'wincent/ferret'
Plug 'wincent/terminus'
Plug 'zchee/deoplete-jedi'

call plug#end()

set nocompatible

set noerrorbells
set novisualbell
set gcr=a:blinkon0 " Disable blinking cursor

" Default color scheme
set background=dark
colorscheme spacegray

" Set encoding
set encoding=utf-8

" Prefer unix
set fileformats=unix,dos,mac

" Whitespace stuff
set textwidth=80
set backspace=indent,eol,start " Allow backspacing over everything in insert mode
set formatoptions+=l
au BufWinEnter * call matchadd('ErrorMsg', '\%>80v.\+', -1) " Column Marker
au BufWritePre * :%s/\s\+$//e " Remove trailing whitespace

" Tab completion
set wildignore+=*.o,*.obj,.git,*.rbc,*.class,.svn,vendor/gems/*

" Use modeline overrides
set modeline
set modelines=10

" Copy to clipboard
if has('unnamedplus')
  set clipboard+=unnamedplus
endif

" Use bash
set shell=bash

" Use <space> as leader key
let mapleader="\<space>"

" Load the plugin and indent settings for the detected filetype
filetype plugin indent on

" Autocomplete
au FileType python set omnifunc=pythoncomplete#Complete
au FileType javascript set omnifunc=javascriptcomplete#CompleteJS
au FileType html set omnifunc=htmlcomplete#CompleteTags
au FileType css set omnifunc=csscomplete#CompleteCSS

" Sudo write
cmap W! w !sudo tee % >/dev/null

" Opens an edit command with the path of the currently edited file filled in
" Normal mode: <Leader>e
nnoremap <Leader>e :e <C-R>=expand("%:p:h") . "/" <CR>

" Unimpaired configuration
" Bubble single lines
nmap <C-Up> [e
nmap <C-Down> ]e
" Bubble multiple lines
vmap <C-Up> [egv
vmap <C-Down> ]egv

" Indent-aware paste
nnoremap <leader>p p`[v`]=

" Remember last location in file
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal g'\"" | endif
endif

" Resize splits when the window is resized
au VimResized * exe "normal! \<c-w>="

" Highlight VCS conflict markers
match ErrorMsg '^\(<\|=\|>\)\{7\}\([^=].\+\)\?$'

noremap <leader><space> :noh<cr>:call clearmatches()<cr>

" Keep search matches in the middle of the window.
nnoremap n nzzzv
nnoremap N Nzzzv

" Don't move on *
nnoremap * *<c-o>

" Same when jumping around
nnoremap g; g;zz
nnoremap g, g,zz

" Heresy
inoremap <c-a> <esc>I
inoremap <c-e> <esc>A

" Fix linewise visual selection of various text objects
nnoremap VV V
nnoremap Vit vitVkoj
nnoremap Vat vatV
nnoremap Vab vabV
nnoremap VaB vaBV

noremap  <F1> :set invfullscreen<CR>
inoremap <F1> <ESC>:set invfullscreen<CR>a

" Fuck you too, manual key.
nnoremap K <nop>

" Stop it, hash key.
inoremap # X<BS>#

" Change case
nnoremap <C-u> gUiw
inoremap <C-u> <esc>gUiwea

" Don't prompt when files are externally changed
set autoread

" Auto close scratch
autocmd CursorMovedI *  if pumvisible() == 0|silent! pclose|endif
autocmd InsertLeave * if pumvisible() == 0|silent! pclose|endif

" Quicker window switching
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l


" PLUGINS

" Without setting this, ZoomWin restores windows in a way that causes
" equalalways behavior to be triggered the next time CommandT is used.
" This is likely a bludgeon to solve some other issue, but it works
set noequalalways

" MacVIM shift+arrow-keys behavior (required in .vimrc)
let macvim_hig_shift_movement=1

" % to bounce from do to end etc.
runtime! macros/matchit.vim
map <tab> %

" neomake
autocmd! BufWritePost * Neomake
let g:neomake_python_pep8_maker={
  \ 'args': ['--ignore=E111,E121,W391']
  \ }
let g:neomake_python_enabled_makers=['frosted', 'pep8']
let g:neomake_javascript_enabled_makers=['eslint']

" yankring
let g:yankring_replace_n_pkey=''
let g:yankring_replace_n_nkey=''
let g:yankring_clipboard_monitor=0

" indent-guides
let g:indent_guides_enable_on_vim_startup = 1

" sayonara
nnoremap <leader>q :Sayonara<cr>
nnoremap <leader>Q :Sayonara!<cr>

" vim-osx-colorpicker
let g:colorpicker_app = 'iTerm.app'

" deoplete
let g:deoplete#enable_at_startup = 1
let g:deoplete#sources#jedi#show_docstring = 1
au FileType ruby let b:deoplete_disable_auto_complete = 1

" fzf
noremap <C-p> :GFiles<cr>


" FILETYPES

" Make uses real tabs
au FileType make set noexpandtab

" Thorfile, Rakefile, Vagrantfile and Gemfile are Ruby
au BufRead,BufNewFile {Gemfile,Rakefile,Vagrantfile,Thorfile,config.ru} set ft=ruby

" Add json syntax highlighting
au BufNewFile,BufRead *.json set ft=javascript

" Go
filetype off
filetype plugin indent off
set runtimepath+=$GOROOT/misc/vim
filetype plugin indent on
syntax on

let g:gocode_gofmt_tabs=' -tabs=true'

